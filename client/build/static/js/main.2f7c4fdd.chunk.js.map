{"version":3,"sources":["utils/auth.js","components/Navbar/index.js","pages/Home.js","utils/mutations.js","pages/SearchRentals.js","utils/queries.js","pages/SavedRentals.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Nav","className","to","role","Auth","loggedIn","href","onClick","logout","Home","Navbar","ADD_RENTAL","gql","Success","useMutation","addRental","useEffect","idbPromise","cart","map","item","_id","length","variables","rentals","data","forEach","setTimeout","SaveRental","Jumbotron","QUERY_USER","SavedRentals","user","useQuery","firstName","lastName","order","index","image","name","alt","src","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f7c4fdd.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/rentalHistory\">\n              Rentals History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"Cup of Sugar\"></span>\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\n// import Category from \"../components/Category\";\n// import Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n     <Navbar/>\n    </div>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_RENTAL = gql`\n  mutation addRental($products: [ID]!) {\n    addRental(rentals: $rentals) {\n      rentals {\n        _id\n        name\n        description\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n// import Jumbotron from '../components/Jumbotron';\nimport { ADD_RENTAL } from '../utils/mutations';\n// import { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addRental] = useMutation(ADD_RENTAL);\n\n  useEffect(() => {\n    async function SaveRental() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addRental({ variables: { rentals } });\n        const rentalsData = data.addRental.rentals;\n\n        rentalsData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 5000);\n    }\n\n    SaveRental();\n  }, [addRental]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      rentals {\n        _id\n        items {\n          _id\n          name\n          description\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_RENTALS = gql`\n  query getRentals($category: ID) {\n    rentals(category: $category) {\n      _id\n      name\n      description\n      quantity\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($reentals: [ID]!) {\n    checkout(rentals: $rentals) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_RENTALS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction SavedRentals() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">‚Üê Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Rentals History for {user.firstName} {user.lastName}\n            </h2>\n            {user.rentals.map((rentals) => (\n              <div key={rentals._id} className=\"my-2\">\n                <div className=\"flex-row\">\n                  {order.rentals.map(({ _id, image, name }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/rentals/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default SavedRentals;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/SearchRentals\";\nimport Saved from \"./pages/SavedRentals\";\n// import Post from './pages/PostRentals';\n// import { StoreProvider } from './utils/GlobalState';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/search\" element={<Search />} />\n            <Route path=\"/saved\" element={<Saved />} />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}