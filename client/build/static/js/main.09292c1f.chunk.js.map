{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/LoginForm.js","pages/SignupForm.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/queries.js","pages/SavedRentals.js","components/Navbar/index.js","pages/PostRentals.js","App.js","index.js"],"names":["Home","className","src","alt","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LoginForm","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","username","addUser","reducer","state","action","rents","cartOpen","cart","rent","map","_id","rentQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","initialState","useReducer","dispatch","QUERY_USER","SavedRentals","user","useQuery","firstName","lastName","order","rental","rentals","index","image","Navbar","loggedIn","href","onClick","logout","PostRentals","for","rows","cols","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","SignupForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09292c1f.chunk.js","sourcesContent":["import React from \"react\";\n// import Category from \"../components/Category\";\n// import LoginForm from \"../pages/LoginForm\";\n// import SignupForm from \"../pages/SignupForm\";\n\n// const Home = () => {\n//   return (\n//     <div className=\"container\">\n//      {/* <LoginForm/>\n//      <SignupForm/> */}\n//      {/* <Category/> */}\n//     </div>\nfunction Home() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"about\">Cup of Sugar</h1>\n      <img src=\"/images/neighbours.jpg\" alt=\"\" className=\"neighbors\"></img>\n      <h2 className=\"about\">\n        <p>Welcome to Cup of Sugar!</p>\n        <p>\n          Here you can either lend or borrow tools, equipments and much more\n          from your neighbors!\n        </p>\n        <p>Sign up or login to begin lending and borrowing!</p>\n      </h2>\n    </div>\n  );\n}\n\nexport default Home;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_RENTAL = gql`\n  mutation addRental($products: [ID]!) {\n    addRental(rentals: $rentals) {\n      rentals {\n        _id\n        name\n        description\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nfunction LoginForm(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">Try again!</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        username: formState.username,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            placeholder=\"Username\"\n            name=\"userName\"\n            type=\"userName\"\n            id=\"userName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import { useReducer } from 'react';\nimport {\n  UPDATE_RENTALS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_RENTALS:\n      return {\n        ...state,\n        rents: [...action.rents],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.rent],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.rents],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((rent) => {\n          if (action._id === rent._id) {\n            rent.rentQuantity = action.rentQuantity;\n          }\n          return rent;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((rent) => {\n        return rent._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const UPDATE_RENTALS = \"UPDATE_RENTALS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, {createContext, useContext,} from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst {Provider} = StoreContext;\n\nconst StoreProvider = ({ value= [], ...props}) =>{\n    const [state, dispatch] = useProductReducer({\n        rents: [],\n        cart:[],\n        categories: [],\n        cartOpen: false,\n        currentCategory: '',\n    });\n    return <Provider value={[state, dispatch]} {...props}/>;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext }; ","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      username\n      orders {\n        _id\n        name\n        rentals {\n          _id\n          name\n          description\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_RENTALS = gql`\n  query getRentals($category: ID) {\n    rentals(category: $category) {\n      _id\n      name\n      description\n      quantity\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($rentals: [ID]!) {\n    checkout(rentals: $rentals) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_RENTALS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction SavedRentals() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Rentals</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Orders History for {user.firstName} {user.lastName}\n            </h2>\n            {user.order.map((rental) => (\n              <div key={rental._id} className=\"my-2\">\n                <div className=\"flex-row\">\n                  {order.rentals.map(({ _id, image, name }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/rental/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ): null}\n      </div>\n    </>\n  );\n}\n\nexport default SavedRentals;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/post\">Lend</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/SavedRentals\">Saved Rentals</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h3>\n        <Link to=\"/\">Back to Home</Link>\n      </h3>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nfunction PostRentals() {\n  return (\n    <div>\n      <h1 className=\"lend\">Lend an item!</h1>\n      <br></br>\n      <div className=\"form-center\">\n        <form className=\"lendinput\">\n          <div className=\"flex-row space-around my-2\">\n            <input type=\"radio\" id=\"tool\" name=\"tool\" value=\"tool\" />\n            <label for=\"tool\">Tool</label>\n            <input\n              type=\"radio\"\n              id=\"appliance\"\n              name=\"appliance\"\n              value=\"appliance\"\n            />\n            <label for=\"appliance\">Appliance</label>\n            <input type=\"radio\" id=\"other\" name=\"other\" value=\"other\" />\n            <label for=\"other\">Other</label>\n          </div>\n          <div className=\"flex-row space-around my-2\">\n            <label htmlFor=\"name\">Item Name:</label>\n            <input placeholder=\"Hammer\" name=\"name\" type=\"text\" id=\"name\" />\n          </div>\n          <div className=\"flex-row space-around my-2\">\n            <label htmlFor=\"zip\">Zip Code:</label>\n            <input placeholder=\"12345\" name=\"zip\" type=\"text\" id=\"zip\" />\n          </div>\n          <div className=\"flex-row space-around my-2\">\n            <label htmlFor=\"description\">Description:</label>\n            <textarea rows=\"4\" cols=\"30\" name=\"description\" id=\"description\">\n              text\n            </textarea>\n          </div>\n          <div className=\"submit-btn\">\n            <button type=\"submit\">Post Rental</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PostRentals;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport LoginForm from \"./pages/LoginForm\";\nimport SignupForm from \"./pages/SignupForm\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport SavedRentals from \"./pages/SavedRentals\";\nimport SearchRentals from \"./pages/SavedRentals\";\nimport Navbar from \"./components/Navbar\";\nimport PostRentals from \"./pages/PostRentals\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Navbar />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<LoginForm />} />\n              <Route path=\"/signup\" element={<SignupForm />} />\n              <Route path=\"/save\" element={<SavedRentals />} />\n              <Route path=\"/search\" element={<SearchRentals />} />\n              <Route path=\"/post\" element={<PostRentals />} />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}