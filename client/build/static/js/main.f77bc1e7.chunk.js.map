{"version":3,"sources":["utils/auth.js","utils/helpers.js","utils/actions.js","utils/GlobalState.js","components/Rentals/index.js","utils/queries.js","components/RentalsList/index.js","components/Category/index.js","components/CartRentals/index.js","components/Cart/index.js","pages/Home.js","utils/mutations.js","pages/SearchRentals.js","pages/SavedRentals.js","App.js","index.js"],"names":["jwt","require","secret","module","exports","authMiddleware","req","token","body","query","headers","authorization","split","pop","trim","data","verify","maxAge","user","console","log","signToken","payload","email","name","_id","sign","expiresIn","pluralize","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","UPDATE_RENTALS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","StoreContext","createContext","useStoreContext","Provider","useContext","Rental","item","state","dispatch","image","quantity","cart","className","to","alt","src","onClick","itemInCart","find","cartItem","type","rentQuantity","parseInt","purchaseQuantity","rentals","rent","QUERY_USER","gql","QUERY_RENTALS","QUERY_CHECKOUT","QUERY_CATEGORIES","RentalsList","currentCategory","useQuery","loading","useEffect","forEach","rental","then","length","filter","category","map","Rentals","Category","categories","categoryData","id","CartItem","placeholder","value","onChange","target","removeFromCart","Cart","useLazyQuery","getCheckout","toggleCart","getCart","cartOpen","CartRentals","Auth","loggedIn","rentalsIds","i","push","variables","role","Home","ADD_RENTAL","Success","useMutation","addRental","setTimeout","location","assign","SaveRental","Jumbotron","SavedRentals","firstName","lastName","order","index","httpLink","createHttpLink","uri","authLink","setContext","_","localStorage","getItem","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f77bc1e7.chunk.js","sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst secret = \"supersecret\";\nconst expiration = \"2h\";\n\nmodule.exports = {\n  authMiddleware: function ({ req }) {\n    let token = req.body.token || req.query.token || req.headers.authorization;\n\n    if (req.headers.authorization) {\n      token = token.split(\" \").pop().trim();\n    }\n    if (!token) {\n      return req;\n    }\n    try {\n      const { data } = jwt.verify(token, secret, { maxAge: expiration });\n      req.user = data;\n    } catch {\n      console.log(\"Invalid token\");\n    }\n    return req;\n  },\n  signToken: function ({ email, name, _id }) {\n    const payload = { email, name, _id };\n    return jwt.sign({ data: payload }, secret, { expiresIn: expiration });\n  },\n};\n","export function pluralize(name, count) {\n    if (count === 1) {\n      return name;\n    }\n    return name + 's';\n  }\n  \n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('shop-shop', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('products', { keyPath: '_id' });\n        db.createObjectStore('categories', { keyPath: '_id' });\n        db.createObjectStore('cart', { keyPath: '_id' });\n      };\n  \n      request.onerror = function(e) {\n        console.log('There was an error');\n      };\n  \n      request.onsuccess = function(e) {\n        db = request.result;\n        tx = db.transaction(storeName, 'readwrite');\n        store = tx.objectStore(storeName);\n  \n        db.onerror = function(e) {\n          console.log('error', e);\n        };\n  \n        switch (method) {\n          case 'put':\n            store.put(object);\n            resolve(object);\n            break;\n          case 'get':\n            const all = store.getAll();\n            all.onsuccess = function() {\n              resolve(all.result);\n            };\n            break;\n          case 'delete':\n            store.delete(object._id);\n            break;\n          default:\n            console.log('No valid method');\n            break;\n        }\n  \n        tx.oncomplete = function() {\n          db.close();\n        };\n      };\n    });\n  }\n  ","export const UPDATE_RENTALS = \"UPDATE_RENTALS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, {createContext, useContext, userContext} from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst {Provider} = StoreContext;\n\nconst StoreProvider = ({ value= [], ...props}) =>{\n    const [state, dispatch] = useProductReducer({\n        items: [],\n        categories: [],\n        currentCategory: '',\n    });\n    return <Provider value={[state, dispatch]} {...props}/>;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext }; ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction Rental(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        rentQuantity: parseInt(itemInCart.rentQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        rentQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        rentals: { ...rent, rentQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, rentQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/rentals/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} available</div>\n      </div>\n      <button onClick={addToCart}>Add to rentals</button>\n    </div>\n  );\n}\n\nexport default Rental;","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      rentals {\n        _id\n        items {\n          _id\n          name\n          description\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_RENTALS = gql`\n  query getRentals($category: ID) {\n    rentals(category: $category) {\n      _id\n      name\n      description\n      quantity\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($reentals: [ID]!) {\n    checkout(rentals: $rentals) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_RENTALS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\n\n","import React, { useEffect } from 'react';\nimport Rentals from '../Rentals';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_RENTALS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_RENTALS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n// import spinner from '../../assets/spinner.gif';\n\nfunction RentalsList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_RENTALS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_RENTALS,\n        rentals: data.rentals,\n      });\n      data.rentals.forEach((rental) => {\n        idbPromise('rentals', 'put', rental);\n      });\n    } else if (!loading) {\n      idbPromise('rentals', 'get').then((rentals) => {\n        dispatch({\n          type: UPDATE_RENTALS,\n          rentals: rentals,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterRentals() {\n    if (!currentCategory) {\n      return state.rentals;\n    }\n\n    return state.rentals.filter(\n      (rental) => rental.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Available Rentals</h2>\n      {state.rentals.length ? (\n        <div className=\"flex-row\">\n          {filterRentals().map((rental) => (\n            <Rentals\n              key={rental._id}\n              _id={rental._id}\n              image={rental.image}\n              name={rental.name}\n              quantity={rental.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>Please add Items!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default RentalsList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction Category() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Rentals Category:</h2>\n      {categories.map((rent) => (\n        <button\n          key={rent._id}\n          onClick={() => {\n            handleClick(rent._id);\n          }}\n        >\n          {rent.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Category;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ rent }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = rent => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...rent });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...rent });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...rent, rentQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n    \n      </div>\n      <div>\n        <div>{rent.name}, ${rent.quantity}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.rentQuantity}\n            onChange={onChange}\n          />\n          <span\n            // role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(rent)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import React, { useEffect } from 'react';\n// import { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartRentals from '../CartRentals';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\n// import './style.css';\n\n// const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     stripePromise.then((res) => {\n  //       res.redirectToCheckout({ sessionId: data.checkout.session });\n  //     });\n  //   }\n  // }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, rentals: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function submitCheckout() {\n    const rentalsIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.rentQuantity; i++) {\n        rentalsIds.push(rentalsIds._id);\n      }\n    });\n\n    getCheckout({\n      variables: { rentals: rentalsIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Your Rentals</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartRentals key={item._id} item={item} />\n          ))}\n\n          {/* <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong> */}\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>Please login first!</span>\n            )}\n          </div>\n      ) : (\n        <h3>\n          You have to add items first!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport RentalsList from \"../components/RentalsList\";\nimport Category from \"../components/Category\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <Category />\n      <RentalsList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_RENTAL = gql`\n  mutation addRental($products: [ID]!) {\n    addRental(rentals: $rentals) {\n      rentals {\n        _id\n        name\n        description\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n// import Jumbotron from '../components/Jumbotron';\nimport { ADD_RENTAL } from '../utils/mutations';\n// import { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addRental] = useMutation(ADD_RENTAL);\n\n  useEffect(() => {\n    async function SaveRental() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addRental({ variables: { rentals } });\n        const rentalsData = data.addRental.rentals;\n\n        rentalsData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 5000);\n    }\n\n    SaveRental();\n  }, [addRental]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction SavedRentals() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Rentals History for {user.firstName} {user.lastName}\n            </h2>\n            {user.rentals.map((rentals) => (\n              <div key={rentals._id} className=\"my-2\">\n                <div className=\"flex-row\">\n                  {order.rentals.map(({ _id, image, name }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/rentals/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default SavedRentals;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/SearchRentals\";\nimport Saved from \"./pages/SavedRentals\";\n// import Post from './pages/PostRentals';\n// import { StoreProvider } from './utils/GlobalState';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/search\" element={<Search />} />\n            <Route path=\"/saved\" element={<Saved />} />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}