{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/LoginForm.js","pages/SignupForm.js","pages/Home.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/queries.js","pages/SavedRentals.js","App.js","index.js"],"names":["LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LoginForm","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","className","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","addUser","firstName","lastName","Home","reducer","state","action","rents","cartOpen","cart","rent","map","_id","rentQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","initialState","useReducer","dispatch","QUERY_USER","SavedRentals","user","useQuery","rentals","order","index","image","alt","src","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","SignupForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aec8bf4.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_RENTAL = gql`\n  mutation addRental($products: [ID]!) {\n    addRental(rentals: $rentals) {\n      rentals {\n        _id\n        name\n        description\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nfunction LoginForm(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">‚Üê Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">Try again!</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">‚Üê Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n\n","import React from \"react\";\n// import Navbar from \"../components/Navbar\";\n// import Category from \"../components/Category\";\n// import Cart from \"../components/Cart\";\nimport LoginForm from \"../pages/LoginForm\";\nimport SignupForm from \"../pages/SignupForm\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n     <LoginForm/>\n     <SignupForm/>\n    </div>,\n    <p>\ndjchskferlugeruge;rg;he;rghe;g;ege\ndjkverklghelrghuergeglejkgtguhtgu\n    </p>\n  );\n};\n\nexport default Home;","import { useReducer } from 'react';\nimport {\n  UPDATE_RENTALS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_RENTALS:\n      return {\n        ...state,\n        rents: [...action.rents],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.rent],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.rents],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((rent) => {\n          if (action._id === rent._id) {\n            rent.rentQuantity = action.rentQuantity;\n          }\n          return rent;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((rent) => {\n        return rent._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","export const UPDATE_RENTALS = \"UPDATE_RENTALS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, {createContext, useContext,} from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst {Provider} = StoreContext;\n\nconst StoreProvider = ({ value= [], ...props}) =>{\n    const [state, dispatch] = useProductReducer({\n        rents: [],\n        cart:[],\n        categories: [],\n        cartOpen: false,\n        currentCategory: '',\n    });\n    return <Provider value={[state, dispatch]} {...props}/>;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext }; ","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      rentals {\n        _id\n        items {\n          _id\n          name\n          description\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_RENTALS = gql`\n  query getRentals($category: ID) {\n    rentals(category: $category) {\n      _id\n      name\n      description\n      quantity\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($reentals: [ID]!) {\n    checkout(rentals: $rentals) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_RENTALS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction SavedRentals() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">‚Üê Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Rentals History for {user.firstName} {user.lastName}\n            </h2>\n            {user.rentals.map((rentals) => (\n              <div key={rentals._id} className=\"my-2\">\n                <div className=\"flex-row\">\n                  {order.rentals.map(({ _id, image, name }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/rentals/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default SavedRentals;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport LoginForm from \"./pages/LoginForm\";\nimport SignupForm from \"./pages/SignupForm\";\nimport { StoreProvider } from './utils/GlobalState';\nimport SavedRentals from \"./pages/SavedRentals\";\nimport SearchRentals from \"./pages/SavedRentals\";\n\n\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<LoginForm />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<SignupForm />} \n              />\n              <Route \n                path=\"/save\" \n                element={<SavedRentals />} \n              />\n              <Route \n                path=\"/search\" \n                element={<SearchRentals />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}