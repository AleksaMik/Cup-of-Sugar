{"version":3,"sources":["utils/mutations.js","components/SignupForm.js","components/LoginForm.js","pages/Home.js","pages/SearchRentals.js","utils/queries.js","pages/SavedRentals.js","App.js","index.js","utils/auth.js"],"names":["ADD_RENTAL","gql","ADD_USER","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","addUser","error","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","token","console","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","LOGIN_USER","Home","Success","addRental","useEffect","idbPromise","cart","map","item","_id","length","rentals","forEach","setTimeout","window","location","assign","SaveRental","Jumbotron","QUERY_USER","SavedRentals","user","useQuery","className","to","firstName","lastName","order","index","image","alt","src","httpLink","createHttpLink","uri","authLink","setContext","_","headers","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","Post","ReactDOM","render","StrictMode","document","getElementById","jwt","require","secret","module","exports","authMiddleware","req","body","query","split","pop","trim","verify","maxAge","log","signToken","payload","sign","expiresIn"],"mappings":"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","file":"static/js/main.9c2e8fd0.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\nexport const ADD_RENTAL = gql`\n  mutation addRental($products: [ID]!) {\n    addRental(rentals: $rentals) {\n      rentals {\n        _id\n        name\n        description\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { loginUser } from '../utils/API';\n// import { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(error);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport Signup from \"../components/SignupForm\";\nimport Login from \"../components/LoginForm\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Signup />\n      <Login />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n// import Jumbotron from '../components/Jumbotron';\nimport { ADD_RENTAL } from '../utils/mutations';\n// import { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addRental] = useMutation(ADD_RENTAL);\n\n  useEffect(() => {\n    async function SaveRental() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addRental({ variables: { rentals } });\n        const rentalsData = data.addRental.rentals;\n\n        rentalsData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 5000);\n    }\n\n    SaveRental();\n  }, [addRental]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      rentals {\n        _id\n        items {\n          _id\n          name\n          description\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_RENTALS = gql`\n  query getRentals($category: ID) {\n    rentals(category: $category) {\n      _id\n      name\n      description\n      quantity\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($reentals: [ID]!) {\n    checkout(rentals: $rentals) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_RENTALS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction SavedRentals() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Rentals History for {user.firstName} {user.lastName}\n            </h2>\n            {user.rentals.map((rentals) => (\n              <div key={rentals._id} className=\"my-2\">\n                <div className=\"flex-row\">\n                  {order.rentals.map(({ _id, image, name }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/rentals/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default SavedRentals;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Search from './pages/SearchRentals';\nimport Saved from './pages/SavedRentals';\n// import Post from './pages/PostRentals';\n// import { StoreProvider } from './utils/GlobalState';\n\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\nconst authLink = setContext((_, {headers}) => {\n    const token = localStorage.getItem('id_token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div>\n                    <Routes>\n                        <Route\n                        path='/' element={<Home />}/>\n                        <Route\n                        path='/search' element={<Search />}/>\n                        <Route\n                        path='/saved' element={<Saved />}/>\n                        <Route\n                        path='/post' element={<Post />}/>\n                    </Routes>\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App; ","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","const jwt = require(\"jsonwebtoken\");\nconst secret = \"supersecret\";\nconst expiration = \"2h\";\n\nmodule.exports = {\n  authMiddleware: function ({ req }) {\n    let token = req.body.token || req.query.token || req.headers.authorization;\n\n    if (req.headers.authorization) {\n      token = token.split(\" \").pop().trim();\n    }\n    if (!token) {\n      return req;\n    }\n    try {\n      const { data } = jwt.verify(token, secret, { maxAge: expiration });\n      req.user = data;\n    } catch {\n      console.log(\"Invalid token\");\n    }\n    return req;\n  },\n  signToken: function ({ email, name, _id }) {\n    const payload = { email, name, _id };\n    return jwt.sign({ data: payload }, secret, { expiresIn: expiration });\n  },\n};\n"],"sourceRoot":""}