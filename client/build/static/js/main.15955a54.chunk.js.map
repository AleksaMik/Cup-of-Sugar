{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/LoginForm.js","pages/SignupForm.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","utils/queries.js","pages/SavedRentals.js","components/Navbar/index.js","App.js","index.js"],"names":["Home","className","src","alt","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LoginForm","props","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","name","value","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","addUser","firstName","lastName","reducer","state","action","rents","cartOpen","cart","rent","map","_id","rentQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","initialState","useReducer","dispatch","QUERY_USER","SavedRentals","user","useQuery","order","rental","rentals","index","image","Navbar","loggedIn","href","onClick","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","SignupForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15955a54.chunk.js","sourcesContent":["import React from \"react\";\r\n// import Category from \"../components/Category\";\r\n// import LoginForm from \"../pages/LoginForm\";\r\n// import SignupForm from \"../pages/SignupForm\";\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div className=\"container\">\r\n//      {/* <LoginForm/>\r\n//      <SignupForm/> */}\r\n//      {/* <Category/> */}\r\n//     </div>\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container\">\r\n    <h1>Cup of Sugar</h1>\r\n    <img src=\"/images/neighbours.jpg\" alt=\"\"></img>\r\n    <h2>\r\n      <p>Welcome to our App!</p>\r\n      <p>Here you can either lend or borrow tools, equipments and much more from your neighbors!</p>\r\n    </h2>\r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default Home;","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const ADD_RENTAL = gql`\r\n  mutation addRental($products: [ID]!) {\r\n    addRental(rentals: $rentals) {\r\n      rentals {\r\n        _id\r\n        name\r\n        description\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nfunction LoginForm(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">Try again!</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n\r\n","import { useReducer } from 'react';\r\nimport {\r\n  UPDATE_RENTALS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from './actions';\r\n\r\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\r\n    case UPDATE_RENTALS:\r\n      return {\r\n        ...state,\r\n        rents: [...action.rents],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.rent],\r\n      };\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.rents],\r\n      };\r\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\r\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((rent) => {\r\n          if (action._id === rent._id) {\r\n            rent.rentQuantity = action.rentQuantity;\r\n          }\r\n          return rent;\r\n        }),\r\n      };\r\n\r\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\r\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((rent) => {\r\n        return rent._id !== action._id;\r\n      });\r\n\r\n      // Then we return a copy of state and check to see if the cart is empty.\r\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\r\n    // This saves us from a crash.\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}\r\n","export const UPDATE_RENTALS = \"UPDATE_RENTALS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import React, {createContext, useContext,} from \"react\";\r\nimport { useProductReducer } from './reducers'\r\n\r\nconst StoreContext = createContext();\r\nconst {Provider} = StoreContext;\r\n\r\nconst StoreProvider = ({ value= [], ...props}) =>{\r\n    const [state, dispatch] = useProductReducer({\r\n        rents: [],\r\n        cart:[],\r\n        categories: [],\r\n        cartOpen: false,\r\n        currentCategory: '',\r\n    });\r\n    return <Provider value={[state, dispatch]} {...props}/>;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n    return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext }; ","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      username\r\n      orders {\r\n        _id\r\n        name\r\n        rentals {\r\n          _id\r\n          name\r\n          description\r\n          quantity\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_RENTALS = gql`\r\n  query getRentals($category: ID) {\r\n    rentals(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      quantity\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($rentals: [ID]!) {\r\n    checkout(rentals: $rentals) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_RENTALS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction SavedRentals() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Rentals</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Orders History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.order.map((rental) => (\r\n              <div key={rental._id} className=\"my-2\">\r\n                <div className=\"flex-row\">\r\n                  {order.rentals.map(({ _id, image, name }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/rental/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ): null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SavedRentals;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/SavedRentals\">\r\n              Your Rentals\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h3>\r\n        <Link to=\"/\">\r\n          Back to Home \r\n        </Link>\r\n      </h3>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport LoginForm from \"./pages/LoginForm\";\r\nimport SignupForm from \"./pages/SignupForm\";\r\nimport { StoreProvider } from './utils/GlobalState';\r\nimport SavedRentals from \"./pages/SavedRentals\";\r\nimport SearchRentals from \"./pages/SavedRentals\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <StoreProvider>\r\n            <Navbar/>\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={<Home />} \r\n              />\r\n              <Route \r\n                path=\"/login\" \r\n                element={<LoginForm />} \r\n              />\r\n              <Route \r\n                path=\"/signup\" \r\n                element={<SignupForm />} \r\n              />\r\n              <Route \r\n                path=\"/save\" \r\n                element={<SavedRentals />} \r\n              />\r\n              <Route \r\n                path=\"/search\" \r\n                element={<SearchRentals />} \r\n              />\r\n            </Routes>\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport  ReactDOM  from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}